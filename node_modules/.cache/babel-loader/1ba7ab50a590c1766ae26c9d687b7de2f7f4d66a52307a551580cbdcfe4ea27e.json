{"ast":null,"code":"var _jsxFileName = \"/Users/freddydordoni/bootcamp/FD-React-Portfolio/fd-react-portfolio/src/components/Contact/index.js\",\n  _s = $RefreshSig$();\n// CONTACT PAGE\nimport { useEffect, useState } from 'react';\nimport Loader from 'react-loaders';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { useRef } from 'react';\nimport emailjs from '@emailjs/browser';\nimport AnimatedLetters from '';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [letterClass, setLetterClass] = useState('text-animate'); // setting the initial state to be the class that animates the letters\n\n  //! ERROR: it moves the title as it updates it after 3 seconds, so taking this out.\n  useEffect(() => {\n    return setTimeout(() => {\n      setLetterClass('text-animate-hover');\n    }, 3000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container contact-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-area\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(AnimatedLetters, {\n            letterClass: letterClass,\n            strArray: ['C', 'o', 'n', 't', 'a', 'c', 't', ' ', 'm', 'e'] // setting the animation as a string array\n            ,\n            index: 15 // 1.5 seconds delay in the animation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"pacman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Contact, \"YlPNN7oJ+6mzs0fohZppsFcng1g=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["useEffect","useState","Loader","MapContainer","TileLayer","Marker","Popup","useRef","emailjs","AnimatedLetters","jsxDEV","_jsxDEV","Fragment","_Fragment","Contact","_s","letterClass","setLetterClass","setTimeout","children","className","strArray","index","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/freddydordoni/bootcamp/FD-React-Portfolio/fd-react-portfolio/src/components/Contact/index.js"],"sourcesContent":["// CONTACT PAGE\nimport { useEffect, useState } from 'react'\nimport Loader from 'react-loaders'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { useRef } from 'react'\nimport emailjs from '@emailjs/browser'\nimport AnimatedLetters from ''\nimport './index.scss'\n\n\nconst Contact = () => { \n\n    const [letterClass, setLetterClass] = useState('text-animate')  // setting the initial state to be the class that animates the letters\n\n  //! ERROR: it moves the title as it updates it after 3 seconds, so taking this out.\n  useEffect(() => {\n    return setTimeout(() => {\n      setLetterClass('text-animate-hover')\n    }, 3000)\n  }, [])\n\n    return (\n    <>\n        <div className=\"container contact-page\">\n            <div className=\"text-area\">\n                <h1>\n                    <AnimatedLetters \n                    letterClass={letterClass}\n                    strArray={['C', 'o', 'n', 't', 'a', 'c', 't', ' ', 'm', 'e' ]}  // setting the animation as a string array\n                    index={15}   // 1.5 seconds delay in the animation\n                    />\n                </h1>\n            </div>\n        </div>\n      <Loader type=\"pacman\" />\n    </>\n  )\n}\n\nexport default Contact"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,SAASC,MAAM,QAAQ,OAAO;AAC9B,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,eAAe,MAAM,EAAE;AAC9B,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGrB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,cAAc,CAAC,EAAE;;EAElE;EACAD,SAAS,CAAC,MAAM;IACd,OAAOkB,UAAU,CAAC,MAAM;MACtBD,cAAc,CAAC,oBAAoB,CAAC;IACtC,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEJ,oBACAN,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACIR,OAAA;MAAKS,SAAS,EAAC,wBAAwB;MAAAD,QAAA,eACnCR,OAAA;QAAKS,SAAS,EAAC,WAAW;QAAAD,QAAA,eACtBR,OAAA;UAAAQ,QAAA,eACIR,OAAA,CAACF,eAAe;YAChBO,WAAW,EAAEA,WAAY;YACzBK,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAG,CAAE;YAAA;YAChEC,KAAK,EAAE,EAAG,CAAG;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACRf,OAAA,CAACT,MAAM;MAACyB,IAAI,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACxB,CAAC;AAEP,CAAC;AAAAX,EAAA,CA3BKD,OAAO;AAAAc,EAAA,GAAPd,OAAO;AA6Bb,eAAeA,OAAO;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}